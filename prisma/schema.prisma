generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  RoleAccessRequest RoleAccessRequest[]
  users             User[]
}

model User {
  id                     Int                     @id @default(autoincrement())
  email                  String                  @unique
  fullName               String
  mobileNumber           String?
  gender                 String?
  profilePicture         String?
  roleId                 Int
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  accessLogs             AccessLog[]
  incidentInvestigations IncidentInvestigation[]
  incidentReports        IncidentReport[]
  jobSafetyAnalyses      JobSafetyAnalysis[]
  methodStatements       MethodStatement[]
  otps                   Otp[]
  responsePlans          ResponsePlan[]
  riskAssessments        RiskAssessment[]
  RoleAccessRequest      RoleAccessRequest[]
  sitePermissions        SitePermission[]
  toolboxTalks           ToolboxTalk[]
  legalRegisters         LegalRegister[]
  auditLogs              AuditLog[]
  role                   Role                    @relation(fields: [roleId], references: [id])
}

model Otp {
  id        Int      @id @default(autoincrement())
  code      String
  userId    Int
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model AccessLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  browser   String
  city      String
  country   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model RoleAccessRequest {
  id              Int      @id @default(autoincrement())
  userId          Int
  requestedRoleId Int
  status          String
  createdAt       DateTime @default(now())
  requestedRole   Role     @relation(fields: [requestedRoleId], references: [id])
  user            User     @relation(fields: [userId], references: [id])
}

model CompanyBranding {
  id                     Int                     @id @default(autoincrement())
  name                   String
  documentControlNumber  String
  logo                   String
  createdAt              DateTime                @default(now())
  updatedAt              DateTime                @updatedAt
  incidentInvestigations IncidentInvestigation[]
  incidentReports        IncidentReport[]
  jobSafetyAnalyses      JobSafetyAnalysis[]
  methodStatements       MethodStatement[]
  responsePlans          ResponsePlan[]
  riskAssessments        RiskAssessment[]
  sitePermissions        SitePermission[]
  toolboxTalks           ToolboxTalk[]
  legalRegisters         LegalRegister[]
}

model RiskAssessment {
  id                      Int             @id @default(autoincrement())
  userId                  Int
  companyBrandingId       Int
  industry                String
  activityType            String
  location                String
  existingControlMeasures String
  responsibleDepartments  String
  preparedBy              String
  preparedByOccupation    String
  reviewedBy              String
  reviewedByOccupation    String
  approvedBy              String
  approvedByOccupation    String
  gcpFileUrl              String?
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  generatedContent        String?
  companyBranding         CompanyBranding @relation(fields: [companyBrandingId], references: [id])
  user                    User            @relation(fields: [userId], references: [id])
}

model JobSafetyAnalysis {
  id                Int             @id @default(autoincrement())
  userId            Int
  companyBrandingId Int
  activityType      String
  date              DateTime
  time              String
  numberOfWorkers   Int
  knownHazards      String
  participantNames  String
  gcpFileUrl        String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  companyBranding   CompanyBranding @relation(fields: [companyBrandingId], references: [id])
  user              User            @relation(fields: [userId], references: [id])
}

model MethodStatement {
  id                Int                            @id @default(autoincrement())
  userId            Int
  companyBrandingId Int
  activityName      String
  toolsAndEquipment String
  numberOfPeople    Int
  activityBrief     String
  gcpFileUrl        String?
  createdAt         DateTime                       @default(now())
  updatedAt         DateTime                       @updatedAt
  companyBranding   CompanyBranding                @relation(fields: [companyBrandingId], references: [id])
  user              User                           @relation(fields: [userId], references: [id])
  safetyMeasures    MethodStatementSafetyMeasure[]
  staffPersons      MethodStatementStaffPerson[]
}

model SafetyMeasure {
  id                   Int                            @id @default(autoincrement())
  name                 String
  imageUrl             String?
  createdAt            DateTime                       @default(now())
  methodStatementLinks MethodStatementSafetyMeasure[]
}

model MethodStatementSafetyMeasure {
  id                Int             @id @default(autoincrement())
  methodStatementId Int
  safetyMeasureId   Int?
  name              String
  methodStatement   MethodStatement @relation(fields: [methodStatementId], references: [id])
  safetyMeasure     SafetyMeasure?  @relation(fields: [safetyMeasureId], references: [id])
}

model MethodStatementStaffPerson {
  id                Int             @id @default(autoincrement())
  methodStatementId Int
  name              String
  position          String
  mobileNumber      String
  methodStatement   MethodStatement @relation(fields: [methodStatementId], references: [id])
}

model ResponsePlan {
  id                Int                         @id @default(autoincrement())
  userId            Int
  companyBrandingId Int
  emergencyType     String
  gcpFileUrl        String?
  createdAt         DateTime                    @default(now())
  updatedAt         DateTime                    @updatedAt
  companyBranding   CompanyBranding             @relation(fields: [companyBrandingId], references: [id])
  user              User                        @relation(fields: [userId], references: [id])
  evacuationMaps    ResponsePlanEvacuationMap[]
  fireWardens       ResponsePlanFireWarden[]
  floorWardens      ResponsePlanFloorWarden[]
}

model ResponsePlanEvacuationMap {
  id             Int          @id @default(autoincrement())
  responsePlanId Int
  imageUrl       String
  responsePlan   ResponsePlan @relation(fields: [responsePlanId], references: [id])
}

model ResponsePlanFireWarden {
  id             Int          @id @default(autoincrement())
  responsePlanId Int
  name           String
  responsePlan   ResponsePlan @relation(fields: [responsePlanId], references: [id])
}

model ResponsePlanFloorWarden {
  id             Int          @id @default(autoincrement())
  responsePlanId Int
  name           String
  responsePlan   ResponsePlan @relation(fields: [responsePlanId], references: [id])
}

model ToolboxTalk {
  id                   Int                        @id @default(autoincrement())
  userId               Int
  companyBrandingId    Int
  topic                String
  keyPoints            String
  numberOfParticipants Int
  date                 DateTime
  time                 String
  gcpFileUrl           String?
  createdAt            DateTime                   @default(now())
  updatedAt            DateTime                   @updatedAt
  companyBranding      CompanyBranding            @relation(fields: [companyBrandingId], references: [id])
  user                 User                       @relation(fields: [userId], references: [id])
  trainingMedia        ToolboxTalkTrainingMedia[]
}

model ToolboxTalkTrainingMedia {
  id            Int         @id @default(autoincrement())
  toolboxTalkId Int
  imageUrl      String
  toolboxTalk   ToolboxTalk @relation(fields: [toolboxTalkId], references: [id])
}

model IncidentReport {
  id                Int             @id @default(autoincrement())
  userId            Int
  companyBrandingId Int
  incidentType      String
  description       String
  date              DateTime
  time              String
  location          String
  gcpFileUrl        String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  companyBranding   CompanyBranding @relation(fields: [companyBrandingId], references: [id])
  user              User            @relation(fields: [userId], references: [id])
}

model SitePermission {
  id                  Int                         @id @default(autoincrement())
  userId              Int
  companyBrandingId   Int
  location            String
  date                DateTime
  time                String
  activityType        String
  permitApplicantName String
  permitHolderName    String
  supervisorName      String
  descriptionOfWork   String
  permitValidity      String
  permitExtension     String
  permitApproverName  String
  permitClosureDate   DateTime
  gcpFileUrl          String?
  createdAt           DateTime                    @default(now())
  updatedAt           DateTime                    @updatedAt
  companyBranding     CompanyBranding             @relation(fields: [companyBrandingId], references: [id])
  user                User                        @relation(fields: [userId], references: [id])
  participants        SitePermissionParticipant[]
}

model SitePermissionParticipant {
  id               Int            @id @default(autoincrement())
  sitePermissionId Int
  name             String
  sitePermission   SitePermission @relation(fields: [sitePermissionId], references: [id])
}

model IncidentInvestigation {
  id                              Int                                                  @id @default(autoincrement())
  userId                          Int
  companyBrandingId               Int
  incidentCategory                String
  description                     String
  date                            DateTime
  time                            String
  location                        String
  supervisor                      String
  reportedBy                      String
  gcpFileUrl                      String?
  createdAt                       DateTime                                             @default(now())
  updatedAt                       DateTime                                             @updatedAt
  companyBranding                 CompanyBranding                                      @relation(fields: [companyBrandingId], references: [id])
  user                            User                                                 @relation(fields: [userId], references: [id])
  departments                     IncidentInvestigationDepartment[]
  immediateCausesUnsafeActs       IncidentInvestigationImmediateCauseUnsafeAct[]
  immediateCausesUnsafeConditions IncidentInvestigationImmediateCauseUnsafeCondition[]
  participants                    IncidentInvestigationParticipant[]
  rootCausesPersonalFactors       IncidentInvestigationRootCausePersonalFactor[]
  witnesses                       IncidentInvestigationWitness[]
}

model IncidentInvestigationParticipant {
  id                      Int                   @id @default(autoincrement())
  incidentInvestigationId Int
  name                    String
  incidentInvestigation   IncidentInvestigation @relation(fields: [incidentInvestigationId], references: [id])
}

model IncidentInvestigationWitness {
  id                      Int                   @id @default(autoincrement())
  incidentInvestigationId Int
  name                    String
  incidentInvestigation   IncidentInvestigation @relation(fields: [incidentInvestigationId], references: [id])
}

model IncidentInvestigationDepartment {
  id                      Int                   @id @default(autoincrement())
  incidentInvestigationId Int
  name                    String
  incidentInvestigation   IncidentInvestigation @relation(fields: [incidentInvestigationId], references: [id])
}

model IncidentInvestigationImmediateCauseUnsafeAct {
  id                      Int                   @id @default(autoincrement())
  incidentInvestigationId Int
  name                    String
  incidentInvestigation   IncidentInvestigation @relation(fields: [incidentInvestigationId], references: [id])
}

model IncidentInvestigationImmediateCauseUnsafeCondition {
  id                      Int                   @id @default(autoincrement())
  incidentInvestigationId Int
  name                    String
  incidentInvestigation   IncidentInvestigation @relation(fields: [incidentInvestigationId], references: [id])
}

model IncidentInvestigationRootCausePersonalFactor {
  id                      Int                   @id @default(autoincrement())
  incidentInvestigationId Int
  name                    String
  incidentInvestigation   IncidentInvestigation @relation(fields: [incidentInvestigationId], references: [id])
}

model LegalRegister {
  id                Int             @id @default(autoincrement())
  country           String
  category          String
  year              Int
  companyBrandingId Int
  companyBranding   CompanyBranding @relation(fields: [companyBrandingId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int?
  user   User? @relation(fields: [userId], references: [id])
}

model AuditLog {
  id          Int      @id @default(autoincrement())
  userId      Int
  action      String   // e.g., CREATE, UPDATE, DELETE, REVIEW, APPROVE, REJECT
  documentType String  // e.g., RiskAssessment, IncidentReport, etc.
  documentId  Int
  details     Json?
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}
